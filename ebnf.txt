MLog grammar:

model ::= (import)* (attribute)* (layer)*

import ::= '#import' STR ('\n')+

attribute ::= '#define' ( network_name      # Optional - defaulted
                        | cuda_available    # Optional - defaulted 
                        | input_tensors     # Mandatory
                        | output_tensors    # Mandatory
                        | backend           # Optional - defaulted
                        | target            # Optional - defaulted
                        )

layer ::= (LSTM
        | MLP
        | SIGMOID # Extend this field for new layers
	) ('\n')+

LSTM ::= 'LSTM' ('\n')* '{' ('\n')+ param_block hyperparam_block '}'
MLP ::= 'MLP' ('\n')* '{' ('\n')+ param_block hyperparam_block '}'
SIGMOID ::= 'SIGMOID' ('\n')+ '{' ('\n')* param_block '}'

param_block ::= (params)* # Extend layer_n

params ::= input        # Mandatory
         | output       # Mandatory
         | layer_name   # Optional

hyperparam_block ::= 'hyperparam_block' ('\n')* '{' ('\n')+ ( (lstm_hparams)* | (mlp_hparams)* ) '}' ('\n')+

lstm_hparams ::= input_size         	# Mandatory
              | output_timestep 	# Mandatory
              | hidden_size 	        # Mandatory
              | num_layers          	# Mandatory

mlp_hparams ::= in_features         	# Mandatory
              | out_features        	# Mandatory

BinExpr ::= STR  
            | BinExpr '+' STR

lengthof = 'len' '(' STR ')' ('\n')+

## Model Attributes
network_name ::= 'network_name' STR ('\n')+
backend ::= 'backend' STR ('\n')+
target ::= 'target' STR ('\n')+
cuda_available ::= 'cuda_available' BOOL ('\n')+

## Model Inputs and Outputs
input_tensors ::= 'input_tensors' (STR | '[' (STR ',')* STR ']') ('\n')+
output_tensors ::= 'output_tensors' (STR | '[' (STR ',')* STR ']') ('\n')+

## Layer Attributes
layer_name ::= 'name' '=' STR ('\n')+
input_size ::= 'input_size' '=' INT ('\n')+
output_timestep ::= 'output_timestep' '=' INT ('\n')+
hidden_size ::= 'hidden_size' '=' INT ('\n')+
num_layers ::= 'num_layers' '=' INT ('\n')+
in_features ::= 'in_features' '=' (INT | lengthof) ('\n')+
out_features ::= 'out_features' '=' '[' (INT  ',')* INT ']' ('\n')+

## Layer Inputs and Outputs
input ::= 'input' '=' BinExpr ('\n')+
output ::= 'output' '=' STR ('\n')+

## Generic Types
IDENTIFIER ::= 'network_name' | 'backend' | 'target' | 'cuda_available'         # Attribute
             | 'input_tensors' | 'output_tensors'                               # Attribute
             | 'input' | 'output' | 'layer_name'                                # LayerParams
             | 'input_size' | 'output_timestep' | 'hidden_size' | 'num_layers'  # LSTMParams 
             | 'in_features' | 'out_features'                                   # MLParams
             | 'hyperparam_block'                                               # ASTNode
             | 'len'                                                            # ASTNode
             | 'LSTM' | 'MLP' | 'SIGMOID'                                       # Layer

STR ::= '"' ([a-z] | [A-Z] | [0-9] | '_')* '"'
BOOL ::= True | true | False | false | 0 | 1
INT ::= (Îµ | '-') ([0-9])*
